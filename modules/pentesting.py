from pyrogram import Client
from pyrogram import filters
import asyncio
from message import ReplyCheck
import configparser
import os
import sys
config_path = os.path.join(sys.path[0], 'config.ini')
config = configparser.ConfigParser()
config.read(config_path)
prefix = config.get("pyrogram", "prefix")


@Client.on_message(filters.command(["pentesting"], prefix) & filters.me)
async def pentesting(client, message):
    if not message.reply_to_message:
        await message.edit("<b>Нету реплая</b>", parse_mode='HTML')
        await asyncio.sleep(3)
        await message.delete()
    await message.edit(f"{message.reply_to_message}", parse_mode='HTML')


@Client.on_message(filters.command(["copy"], prefix) & filters.me)
async def copy(client, message):
    await client.copy_message(message.chat.id, message.chat.id,
                              message.reply_to_message.message_id,
                              reply_to_message_id=ReplyCheck(message))
    await message.delete()
